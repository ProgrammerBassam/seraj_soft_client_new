name: Build and Release Tauri App

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write  # ✅ يمنح صلاحية التعديل على الإصدارات

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 🦀 Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: 📦 Install required Rust targets
        run: rustup target add x86_64-pc-windows-msvc

      - name: 📦 Install dependencies
        run: npm install

      - name: 🚀 Install Tauri CLI
        run: npm install --global @tauri-apps/cli

      - name: 🛠 Debug Environment Variables
        run: |
          echo "Printing environment variables for debugging..."
          env | sort

      - name: 📝 Generate latest.json
        run: |
          echo "Generating latest.json..."
          node scripts/update-latest-json.mjs  # ✅ توليد latest.json
          dir src-tauri\target  # ✅ عرض محتوى المجلد للتأكد (Windows)
          type src-tauri\target\latest.json  # ✅ عرض محتوى latest.json للتأكد (Windows)

      - name: 🔑 Sign latest.json
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}  # ✅ استخدام المتغير البيئي
        run: |
          echo "Signing latest.json..."
          echo "Private key: $TAURI_SIGNING_PRIVATE_KEY"  # ✅ طباعة المفتاح للتأكد من وجوده
          echo "Checking if latest.json exists..."
          dir src-tauri\target  # ✅ عرض محتوى المجلد للتأكد (Windows)
          if exist src-tauri\target\latest.json (
            echo "latest.json found. Proceeding with signing..."
            npx tauri signer sign --private-key "$TAURI_SIGNING_PRIVATE_KEY" --password "" "src-tauri/target/latest.json"
          ) else (
            echo "Error: latest.json not found!"
            exit 1
          )

      - name: 🔨 Build Tauri App (Windows MSI)
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        run: |
          echo "Building the Tauri app for Windows MSI..."
          npx tauri build --target x86_64-pc-windows-msvc --bundles msi

      - name: 📤 Upload artifacts (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build-windows
          path: src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            src-tauri/target/latest.json  # ✅ تأكد من رفع latest.json هنا أيضاً
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "🚀 New release ${{ github.ref_name }} is available!"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}